//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.9.0
//     from Assets/Controls/ChargedUp.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @ChargedUp: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ChargedUp()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ChargedUp"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""9599fa9a-111e-432b-a098-0eede49d7fb0"",
            ""actions"": [
                {
                    ""name"": ""Translate"",
                    ""type"": ""Value"",
                    ""id"": ""8e4ab8c8-2f04-4060-a257-d057311bb1a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""57095368-7777-43e7-9fae-b79239ffee52"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Place"",
                    ""type"": ""Button"",
                    ""id"": ""846ac7d7-e7d7-4dbf-b62c-b1e43388edde"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stow"",
                    ""type"": ""Button"",
                    ""id"": ""9b0b5dd4-cfd3-47c3-8d31-6093ed17237a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""High"",
                    ""type"": ""Button"",
                    ""id"": ""5767eacd-e57d-4025-b707-56a62b555cd4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Middle"",
                    ""type"": ""Button"",
                    ""id"": ""14f18f98-dead-4c88-9f68-77043d532b95"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Low"",
                    ""type"": ""Button"",
                    ""id"": ""aa5f0fca-c989-4e8f-a37a-6fb30488c9d0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IntakeDoubleSubstation"",
                    ""type"": ""Button"",
                    ""id"": ""20431fbb-631d-4bd2-9215-b6be3e411b5d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IntakeGround"",
                    ""type"": ""Button"",
                    ""id"": ""6dfeaaab-5c5a-4177-a692-eb2806bd64f5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GamePieceMode"",
                    ""type"": ""Button"",
                    ""id"": ""61e84996-1eea-438e-8171-722f51007c5a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnSingleSubstation"",
                    ""type"": ""Button"",
                    ""id"": ""55b5f3f5-4345-47f6-b9b4-e9932b014ce7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""96d08c5d-6ee2-4ec9-afa3-9bb424ab9e8a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""2dcccd06-370d-4b23-96de-60a2713d2889"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PanCamMove"",
                    ""type"": ""Value"",
                    ""id"": ""d0eefd60-1fde-4f91-a60c-9d90aff66124"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DeployClimber"",
                    ""type"": ""Button"",
                    ""id"": ""df4073dc-7e1a-4f34-ab43-bfdf5895d43b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb"",
                    ""type"": ""Button"",
                    ""id"": ""07f2059a-5edb-4c55-a79d-f8bf5a7a6cda"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c4edc2fc-567b-4e05-88c9-1ab3b8814a3e"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Translate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fb1bb068-a322-410b-8f9d-519012742f36"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""debe633a-5d95-468f-9b58-ca7dcf562b46"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6da9761b-d059-4ee1-b63f-455e31c03c47"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5000717a-5fa3-4aa9-a624-35b29adb8d27"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fcd1d111-4585-4ebd-b7f4-f7c03530e7f3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""79614af7-1482-49f1-9e75-a6c44920caf2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4878b479-9ead-4fe3-8528-27c4c9fbcbfa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0fa498dc-f2d2-4e11-95b9-4c4d30b311bc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cc2c0f32-4467-4d31-8cac-c1dacfc6fd5d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9330f18-d949-41da-8171-acbdda69a787"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Translate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38fd9267-3099-4f4c-a31e-306f174b081f"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dac88aab-9e5f-429d-841e-d0e87c886c59"",
                    ""path"": ""<Joystick>/{Twist}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""66baa936-3ed8-4e4e-9567-b2fb0b1419ef"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b44b7f70-acec-4074-9e02-468b8b33a980"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4bf04634-baf2-4bfb-9db6-7f41db2dc442"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""26ab83df-520c-49de-b658-b083a9ad5468"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Low"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""180dc8a4-b120-49ed-89b7-93c9b3ba80b2"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Low"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6041772a-142e-4db3-960e-eb24873f0df2"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/hat/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""Low"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c13de5d-e365-4ca9-b1dd-f98b1c60599f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""IntakeDoubleSubstation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58722b96-087c-4995-9653-88ee8a156f23"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""IntakeDoubleSubstation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6243cdae-87bc-4ce7-99b4-fc9993f3611f"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR;Joystick"",
                    ""action"": ""IntakeDoubleSubstation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea516bae-7fbb-4c34-b816-a5c9235a97a5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""High"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""191c1f7b-b81c-4b1e-a1b8-7c5b4d9ff539"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""High"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""daf10f6e-d467-425e-bf30-68c44e8594d0"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR;Joystick"",
                    ""action"": ""High"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a373812-781b-4634-9a1f-bf0b4390a22f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Middle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d121c794-b02a-4f54-9bf6-18a36f3cd8b7"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Middle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c64adcd-65fd-40fa-b73a-0b85b01722d3"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/hat/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""Middle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e03efa0-fe25-4055-a45d-8b8ef2678276"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Place"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b10a904-175b-4a4e-a527-b89b2033507e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Place"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2a5ec5a-c0fd-41a6-a53e-b7551e58825b"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""Place"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc809496-c86a-4690-925a-a22b652eb4b5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f72e9e4-cbf5-4d78-a1c2-b92fa1cd681b"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Stow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""351314a0-581c-4b53-baa2-9d9275f03032"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""Stow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""236c5efb-a1c9-4ec5-be72-04fc277d2d2c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""IntakeGround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcf95a3c-2461-490f-b7a5-efd210467b1a"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""IntakeGround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfa20bab-7f9e-4d25-bf70-f8f15bac5c13"",
                    ""path"": ""<Joystick>/{SecondaryTrigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""IntakeGround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61fa72db-76ad-4ea9-bc9d-ad0db08be0fb"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""GamePieceMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15eedcd2-246e-489e-a4d4-71e38ee5f335"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""GamePieceMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f5a606f-1cc0-4d9d-aa24-8016b941c18c"",
                    ""path"": ""<HID::Logitech Logitech Extreme 3D>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Joystick"",
                    ""action"": ""GamePieceMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73b6a672-25c6-4c48-9c24-30f79d6bb1c8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fbbb1e4-4ab7-4876-910c-a7e07af051b5"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcd65a46-aa7c-4a96-9edf-081cdf401487"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SpawnSingleSubstation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b38af8e-f43c-4da7-9663-490d2d7cfa94"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""SpawnSingleSubstation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73184d75-b0ae-4166-a5f3-621dd7d753c1"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e56a09b-9ee3-448f-bb68-e30e0dd3d729"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2418533d-f280-4823-8eba-b2740e9db649"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""PanCamMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b8b00f3-f384-47c3-b890-822e61aa39d8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeployClimber"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeea6b90-1c1b-4dec-bd05-80fff39e4e9e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Translate = m_Player.FindAction("Translate", throwIfNotFound: true);
        m_Player_Rotate = m_Player.FindAction("Rotate", throwIfNotFound: true);
        m_Player_Place = m_Player.FindAction("Place", throwIfNotFound: true);
        m_Player_Stow = m_Player.FindAction("Stow", throwIfNotFound: true);
        m_Player_High = m_Player.FindAction("High", throwIfNotFound: true);
        m_Player_Middle = m_Player.FindAction("Middle", throwIfNotFound: true);
        m_Player_Low = m_Player.FindAction("Low", throwIfNotFound: true);
        m_Player_IntakeDoubleSubstation = m_Player.FindAction("IntakeDoubleSubstation", throwIfNotFound: true);
        m_Player_IntakeGround = m_Player.FindAction("IntakeGround", throwIfNotFound: true);
        m_Player_GamePieceMode = m_Player.FindAction("GamePieceMode", throwIfNotFound: true);
        m_Player_SpawnSingleSubstation = m_Player.FindAction("SpawnSingleSubstation", throwIfNotFound: true);
        m_Player_Restart = m_Player.FindAction("Restart", throwIfNotFound: true);
        m_Player_Menu = m_Player.FindAction("Menu", throwIfNotFound: true);
        m_Player_PanCamMove = m_Player.FindAction("PanCamMove", throwIfNotFound: true);
        m_Player_DeployClimber = m_Player.FindAction("DeployClimber", throwIfNotFound: true);
        m_Player_Climb = m_Player.FindAction("Climb", throwIfNotFound: true);
    }

    ~@ChargedUp()
    {
        Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, ChargedUp.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Translate;
    private readonly InputAction m_Player_Rotate;
    private readonly InputAction m_Player_Place;
    private readonly InputAction m_Player_Stow;
    private readonly InputAction m_Player_High;
    private readonly InputAction m_Player_Middle;
    private readonly InputAction m_Player_Low;
    private readonly InputAction m_Player_IntakeDoubleSubstation;
    private readonly InputAction m_Player_IntakeGround;
    private readonly InputAction m_Player_GamePieceMode;
    private readonly InputAction m_Player_SpawnSingleSubstation;
    private readonly InputAction m_Player_Restart;
    private readonly InputAction m_Player_Menu;
    private readonly InputAction m_Player_PanCamMove;
    private readonly InputAction m_Player_DeployClimber;
    private readonly InputAction m_Player_Climb;
    public struct PlayerActions
    {
        private @ChargedUp m_Wrapper;
        public PlayerActions(@ChargedUp wrapper) { m_Wrapper = wrapper; }
        public InputAction @Translate => m_Wrapper.m_Player_Translate;
        public InputAction @Rotate => m_Wrapper.m_Player_Rotate;
        public InputAction @Place => m_Wrapper.m_Player_Place;
        public InputAction @Stow => m_Wrapper.m_Player_Stow;
        public InputAction @High => m_Wrapper.m_Player_High;
        public InputAction @Middle => m_Wrapper.m_Player_Middle;
        public InputAction @Low => m_Wrapper.m_Player_Low;
        public InputAction @IntakeDoubleSubstation => m_Wrapper.m_Player_IntakeDoubleSubstation;
        public InputAction @IntakeGround => m_Wrapper.m_Player_IntakeGround;
        public InputAction @GamePieceMode => m_Wrapper.m_Player_GamePieceMode;
        public InputAction @SpawnSingleSubstation => m_Wrapper.m_Player_SpawnSingleSubstation;
        public InputAction @Restart => m_Wrapper.m_Player_Restart;
        public InputAction @Menu => m_Wrapper.m_Player_Menu;
        public InputAction @PanCamMove => m_Wrapper.m_Player_PanCamMove;
        public InputAction @DeployClimber => m_Wrapper.m_Player_DeployClimber;
        public InputAction @Climb => m_Wrapper.m_Player_Climb;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Translate.started += instance.OnTranslate;
            @Translate.performed += instance.OnTranslate;
            @Translate.canceled += instance.OnTranslate;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @Place.started += instance.OnPlace;
            @Place.performed += instance.OnPlace;
            @Place.canceled += instance.OnPlace;
            @Stow.started += instance.OnStow;
            @Stow.performed += instance.OnStow;
            @Stow.canceled += instance.OnStow;
            @High.started += instance.OnHigh;
            @High.performed += instance.OnHigh;
            @High.canceled += instance.OnHigh;
            @Middle.started += instance.OnMiddle;
            @Middle.performed += instance.OnMiddle;
            @Middle.canceled += instance.OnMiddle;
            @Low.started += instance.OnLow;
            @Low.performed += instance.OnLow;
            @Low.canceled += instance.OnLow;
            @IntakeDoubleSubstation.started += instance.OnIntakeDoubleSubstation;
            @IntakeDoubleSubstation.performed += instance.OnIntakeDoubleSubstation;
            @IntakeDoubleSubstation.canceled += instance.OnIntakeDoubleSubstation;
            @IntakeGround.started += instance.OnIntakeGround;
            @IntakeGround.performed += instance.OnIntakeGround;
            @IntakeGround.canceled += instance.OnIntakeGround;
            @GamePieceMode.started += instance.OnGamePieceMode;
            @GamePieceMode.performed += instance.OnGamePieceMode;
            @GamePieceMode.canceled += instance.OnGamePieceMode;
            @SpawnSingleSubstation.started += instance.OnSpawnSingleSubstation;
            @SpawnSingleSubstation.performed += instance.OnSpawnSingleSubstation;
            @SpawnSingleSubstation.canceled += instance.OnSpawnSingleSubstation;
            @Restart.started += instance.OnRestart;
            @Restart.performed += instance.OnRestart;
            @Restart.canceled += instance.OnRestart;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @PanCamMove.started += instance.OnPanCamMove;
            @PanCamMove.performed += instance.OnPanCamMove;
            @PanCamMove.canceled += instance.OnPanCamMove;
            @DeployClimber.started += instance.OnDeployClimber;
            @DeployClimber.performed += instance.OnDeployClimber;
            @DeployClimber.canceled += instance.OnDeployClimber;
            @Climb.started += instance.OnClimb;
            @Climb.performed += instance.OnClimb;
            @Climb.canceled += instance.OnClimb;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Translate.started -= instance.OnTranslate;
            @Translate.performed -= instance.OnTranslate;
            @Translate.canceled -= instance.OnTranslate;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @Place.started -= instance.OnPlace;
            @Place.performed -= instance.OnPlace;
            @Place.canceled -= instance.OnPlace;
            @Stow.started -= instance.OnStow;
            @Stow.performed -= instance.OnStow;
            @Stow.canceled -= instance.OnStow;
            @High.started -= instance.OnHigh;
            @High.performed -= instance.OnHigh;
            @High.canceled -= instance.OnHigh;
            @Middle.started -= instance.OnMiddle;
            @Middle.performed -= instance.OnMiddle;
            @Middle.canceled -= instance.OnMiddle;
            @Low.started -= instance.OnLow;
            @Low.performed -= instance.OnLow;
            @Low.canceled -= instance.OnLow;
            @IntakeDoubleSubstation.started -= instance.OnIntakeDoubleSubstation;
            @IntakeDoubleSubstation.performed -= instance.OnIntakeDoubleSubstation;
            @IntakeDoubleSubstation.canceled -= instance.OnIntakeDoubleSubstation;
            @IntakeGround.started -= instance.OnIntakeGround;
            @IntakeGround.performed -= instance.OnIntakeGround;
            @IntakeGround.canceled -= instance.OnIntakeGround;
            @GamePieceMode.started -= instance.OnGamePieceMode;
            @GamePieceMode.performed -= instance.OnGamePieceMode;
            @GamePieceMode.canceled -= instance.OnGamePieceMode;
            @SpawnSingleSubstation.started -= instance.OnSpawnSingleSubstation;
            @SpawnSingleSubstation.performed -= instance.OnSpawnSingleSubstation;
            @SpawnSingleSubstation.canceled -= instance.OnSpawnSingleSubstation;
            @Restart.started -= instance.OnRestart;
            @Restart.performed -= instance.OnRestart;
            @Restart.canceled -= instance.OnRestart;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @PanCamMove.started -= instance.OnPanCamMove;
            @PanCamMove.performed -= instance.OnPanCamMove;
            @PanCamMove.canceled -= instance.OnPanCamMove;
            @DeployClimber.started -= instance.OnDeployClimber;
            @DeployClimber.performed -= instance.OnDeployClimber;
            @DeployClimber.canceled -= instance.OnDeployClimber;
            @Climb.started -= instance.OnClimb;
            @Climb.performed -= instance.OnClimb;
            @Climb.canceled -= instance.OnClimb;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnTranslate(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnPlace(InputAction.CallbackContext context);
        void OnStow(InputAction.CallbackContext context);
        void OnHigh(InputAction.CallbackContext context);
        void OnMiddle(InputAction.CallbackContext context);
        void OnLow(InputAction.CallbackContext context);
        void OnIntakeDoubleSubstation(InputAction.CallbackContext context);
        void OnIntakeGround(InputAction.CallbackContext context);
        void OnGamePieceMode(InputAction.CallbackContext context);
        void OnSpawnSingleSubstation(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnPanCamMove(InputAction.CallbackContext context);
        void OnDeployClimber(InputAction.CallbackContext context);
        void OnClimb(InputAction.CallbackContext context);
    }
}
